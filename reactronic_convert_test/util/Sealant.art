внешнее {
  //// The below copyright notice and the license permission notice
  //// shall be included in all copies or substantial portions.
  //// Copyright (C) 2016-2022 Nezaboodka Software <contact@nezaboodka.com>
  //// License: https://raw.githubusercontent.com/nezaboodka/reactronic/master/LICENSE
  //// By contributing, you agree that your contributions will be
  //// automatically licensed under the license referred above.
  тип Sealable<T> = интерфейс
  {
    операция toMutable(): T
    [Sealant.SealedType]: Объект
  }

  тип Sealed<T> = интерфейс
  {
    [Sealant.CreateCopy]: операция(): T
  }

  тип Sealant = /* абстрактный */ объект
  {
    глобальный защищено SealedType: unique
    глобальный защищено CreateCopy: unique
    глобальный операция seal<T = Sealable<T>>(collection: T, sealedType: Объект, typeName: Текст, member: Объект): T
    глобальный операция toMutable<T = Sealable<T>>(collection: T): T
    глобальный операция error(collection: Sealed<Объект>): Error  }
}
