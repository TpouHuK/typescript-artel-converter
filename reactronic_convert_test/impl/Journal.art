внешнее {
  //// The below copyright notice and the license permission notice
  //// shall be included in all copies or substantial portions.
  //// Copyright (C) 2016-2022 Nezaboodka Software <contact@nezaboodka.com>
  //// License: https://raw.githubusercontent.com/nezaboodka/reactronic/master/LICENSE
  //// By contributing, you agree that your contributions will be
  //// automatically licensed under the license referred above.
  тип Saver = операция(patch: PatchSet): Promise<Ничего>

  тип Journal = /*(!) абстрактный */ объект на основе ObservableObject
  {
    /*(!) абстрактный */ 
    capacity: Число

    /*(!) абстрактный */ защищено
    edits: ReadonlyArray<PatchSet>

    /*(!) абстрактный */ защищено
    unsaved: PatchSet

    /*(!) абстрактный */ защищено
    canUndo: ДаНет

    /*(!) абстрактный */ защищено
    canRedo: ДаНет

    /*(!) абстрактный */ 
    операция edited(patch: PatchSet)

    /*(!) абстрактный */ 
    операция saved(patch: PatchSet)

    /*(!) абстрактный */ 
    операция undo(count: Число? = пусто)

    /*(!) абстрактный */ 
    операция redo(count: Число? = пусто)

    глобальный 
    операция create(): Journal
  }

  тип JournalImpl = объект на основе Journal
  {
    /*(!) private */ 
    _capacity: Число

    /*(!) private */ 
    _edits: Список<PatchSet>

    /*(!) private */ 
    _unsaved: PatchSet

    /*(!) private */ 
    _position: Число

    операция edited(p: PatchSet)

    операция saved(patch: PatchSet)

    операция undo(count: Число = 1)

    операция redo(count: Число = 1)

    глобальный 
    операция buildPatch(hint: Текст, items: Map<ObjectHandle, ObjectSnapshot>): PatchSet

    глобальный 
    операция applyPatch(patch: PatchSet, undoing: ДаНет)

    операция mergePatchToUnsaved(patch: PatchSet, undoing: ДаНет)

    capacity: Число
      при чтении { }
      при записи { }

    edits: ReadonlyArray<PatchSet>
      при чтении { }

    unsaved: PatchSet
      при чтении { }

    canUndo: ДаНет
      при чтении { }

    canRedo: ДаНет
      при чтении { }
  }

}
