внешнее {
  //// The below copyright notice and the license permission notice
  //// shall be included in all copies or substantial portions.
  //// Copyright (C) 2016-2022 Nezaboodka Software <contact@nezaboodka.com>
  //// License: https://raw.githubusercontent.com/nezaboodka/reactronic/master/LICENSE
  //// By contributing, you agree that your contributions will be
  //// automatically licensed under the license referred above.
  //// MvccObject, TransactionalObject, ObservableObject
  тип MvccObject = /*(!) абстрактный */ объект
  {
    скрыто типом 
    при создании(observable: ДаНет)/*(!) any */ Объект?

    операция [Symbol.toStringTag](): Текст
  }

  тип TransactionalObject = /*(!) абстрактный */ объект на основе MvccObject
  {
    при создании()/*(!) any */ Объект?
  }

  тип ObservableObject = /*(!) абстрактный */ объект на основе MvccObject
  {
    при создании()/*(!) any */ Объект?
  }

  //// Options
  тип OptionsImpl = объект на основе MemberOptions
  {
    защищено
    getter: Function

    защищено
    setter: Function

    защищено
    kind: Kind

    защищено
    separation: SeparationMode

    защищено
    order: Число

    защищено
    noSideEffects: ДаНет

    защищено
    triggeringArgs: ДаНет

    защищено
    throttling: Число

    защищено
    reentrance: Reentrance

    защищено
    journal: Journal?

    защищено
    monitor: Monitor?

    защищено
    logging: Partial<LoggingOptions>?

    глобальный защищено
    INITIAL: /*(!) any */ Объект?

    при создании(getter: Function?, setter: Function?, existing: OptionsImpl, patch: Partial<OptionsImpl>, implicit: ДаНет)/*(!) any */ Объект?
  }

  //// Mvcc
  тип Mvcc = объект на основе ProxyHandler<ObjectHandle>
  {
    глобальный 
    reactivityAutoStartDisabled: ДаНет

    глобальный 
    repetitiveUsageWarningThreshold: Число

    глобальный 
    mainThreadBlockingWarningThreshold: Число

    глобальный 
    asyncActionDurationWarningThreshold: Число

    глобальный 
    sensitivity: ДаНет

    глобальный защищено
    transactional: Mvcc

    глобальный защищено
    observable: Mvcc

    защищено
    isObservable: ДаНет

    при создании(isObservable: ДаНет)/*(!) any */ Объект?

    операция getPrototypeOf(h: ObjectHandle): Объект?

    операция get(h: ObjectHandle, m: MemberName, receiver: /*(!) any */ Объект?): /*(!) any */ Объект?

    операция set(h: ObjectHandle, m: MemberName, value: /*(!) any */ Объект?, receiver: /*(!) any */ Объект?): ДаНет

    операция has(h: ObjectHandle, m: MemberName): ДаНет

    операция defineProperty(h: ObjectHandle, m: Текст | Символ, attributes: PropertyDescriptor): ДаНет

    операция getOwnPropertyDescriptor(h: ObjectHandle, m: MemberName): PropertyDescriptor?

    операция ownKeys(h: ObjectHandle): Array<Текст | Символ>

    глобальный 
    операция decorateData(isObservable: ДаНет, proto: /*(!) any */ Объект?, member: MemberName): /*(!) any */ Объект?

    глобальный 
    операция decorateOperation(implicit: ДаНет, decorator: Function, options: Partial<MemberOptions>, proto: /*(!) any */ Объект?, member: MemberName, pd: PropertyDescriptor?): /*(!) any */ Объект?

    глобальный 
    операция decorateOperationParametrized(decorator: Function, options: Partial<MemberOptions>): F</*(!) any */ Объект?>

    глобальный 
    операция acquireHandle(obj: /*(!) any */ Объект?): ObjectHandle

    глобальный 
    операция createHandleForMvccObject(proto: /*(!) any */ Объект?, data: /*(!) any */ Объект?, blank: /*(!) any */ Объект?, hint: Текст, isObservable: ДаНет): ObjectHandle

    глобальный 
    операция setProfilingMode(isOn: ДаНет, options: Partial<ProfilingOptions>? = пусто)

    #js.МассивПараметров
    глобальный 
    операция sensitive<T>(sensitivity: ДаНет, func: F<T>, args: Список</*(!) any */ Объект?>): T

    глобальный 
    операция setHint<T>(obj: T, hint: Текст?): T

    глобальный 
    операция getHint<T>(obj: T): Текст

    глобальный 
    createOperation: /*(!) any */ Объект?

    глобальный 
    rememberOperationOptions: /*(!) any */ Объект?
  }

}
