внешнее {
  //// The below copyright notice and the license permission notice
  //// shall be included in all copies or substantial portions.
  //// Copyright (C) 2016-2022 Nezaboodka Software <contact@nezaboodka.com>
  //// License: https://raw.githubusercontent.com/nezaboodka/reactronic/master/LICENSE
  //// By contributing, you agree that your contributions will be
  //// automatically licensed under the license referred above.
  тип Monitor = /*(!) абстрактный */ объект на основе ObservableObject
  {
    /*(!) абстрактный */ защищено
    isActive: ДаНет

    /*(!) абстрактный */ защищено
    counter: Число

    /*(!) абстрактный */ защищено
    workers: ReadonlySet<Worker>

    /*(!) абстрактный */ защищено
    duration: Число

    глобальный 
    операция create(hint: Текст, activationDelay: Число, deactivationDelay: Число, durationResolution: Число): Monitor
  }

  тип MonitorImpl = объект на основе Monitor
  {
    isActive: /*(!) any */ Объект?

    counter: /*(!) any */ Объект?

    workers: /*(!) any */ Объект?

    duration: /*(!) any */ Объект?

    защищено
    internals: /*(!) any */ Объект?

    операция enter(worker: Worker)

    операция leave(worker: Worker)

    глобальный 
    операция create(hint: Текст, activationDelay: Число, deactivationDelay: Число, durationResolution: Число): MonitorImpl

    глобальный 
    операция enter(mon: MonitorImpl, worker: Worker)

    глобальный 
    операция leave(mon: MonitorImpl, worker: Worker)

    /*(!) private */ глобальный 
    операция doCreate(hint: Текст, activationDelay: Число, deactivationDelay: Число, durationResolution: Число): MonitorImpl

    /*(!) private */ глобальный 
    операция activate(mon: MonitorImpl, delay: Число)

    /*(!) private */ глобальный 
    операция deactivate(mon: MonitorImpl, delay: Число)

    /*(!) private */ глобальный 
    операция tick(mon: MonitorImpl)
  }

}
