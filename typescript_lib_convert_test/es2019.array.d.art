тип FlatArray<Arr, Depth = Число> = /*(!) {
    done: Arr;
    recur: Arr extends ReadonlyArray<infer InnerArr> ? FlatArray<InnerArr, [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][Depth]>
        : Arr;
}[Depth extends -1 ? "done" : "recur"] */ Объект?

тип ReadonlyArray<T> = интерфейс
{
  операция flatMap<U, This>(callback: операция(this: This, value: T, index: Число, array: Список<T>): U | ReadonlyArray<U>, thisArg: This?FUCKFUCK = пусто): Список<U>

  операция flat<A, D = Число>(this: A, depth: D?FUCKFUCK = пусто): Список<FlatArray<A, D>>
}


тип Array<T> = интерфейс
{
  операция flatMap<U, This>(callback: операция(this: This, value: T, index: Число, array: Список<T>): U | ReadonlyArray<U>, thisArg: This?FUCKFUCK = пусто): Список<U>

  операция flat<A, D = Число>(this: A, depth: D?FUCKFUCK = пусто): Список<FlatArray<A, D>>
}

