/// <reference lib="es2015.symbol" />

/// <reference lib="es2015.symbol.wellknown" />

тип SharedArrayBuffer = интерфейс
{
  защищено 
  byteLength: Число

  операция slice(begin: Число, end: Число? = пусто): SharedArrayBuffer

  защищено 
  [Symbol.species]: SharedArrayBuffer

  защищено 
  [Symbol.toStringTag]: "SharedArrayBuffer"
}


тип SharedArrayBufferConstructor = интерфейс
{
  защищено 
  prototype: SharedArrayBuffer

  при создании(byteLength: Число): SharedArrayBuffer
}


внешнее
/*(!) var */ SharedArrayBuffer: SharedArrayBufferConstructor


тип ArrayBufferTypes = интерфейс
{
  SharedArrayBuffer: SharedArrayBuffer
}


тип Atomics = интерфейс
{
  операция add(typedArray: Объект? /*(!)Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array*/, index: Число, value: Число): Число

  операция and(typedArray: Объект? /*(!)Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array*/, index: Число, value: Число): Число

  операция compareExchange(typedArray: Объект? /*(!)Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array*/, index: Число, expectedValue: Число, replacementValue: Число): Число

  операция exchange(typedArray: Объект? /*(!)Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array*/, index: Число, value: Число): Число

  операция isLockFree(size: Число): ДаНет

  операция load(typedArray: Объект? /*(!)Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array*/, index: Число): Число

  операция or(typedArray: Объект? /*(!)Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array*/, index: Число, value: Число): Число

  операция store(typedArray: Объект? /*(!)Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array*/, index: Число, value: Число): Число

  операция sub(typedArray: Объект? /*(!)Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array*/, index: Число, value: Число): Число

  операция wait(typedArray: Int32Array, index: Число, value: Число, timeout: Число? = пусто): Объект? /*(!)"ok" | "not-equal" | "timed-out"*/

  операция notify(typedArray: Int32Array, index: Число, count: Число? = пусто): Число

  операция xor(typedArray: Объект? /*(!)Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array*/, index: Число, value: Число): Число

  защищено 
  [Symbol.toStringTag]: "Atomics"
}


внешнее
/*(!) var */ Atomics: Atomics

