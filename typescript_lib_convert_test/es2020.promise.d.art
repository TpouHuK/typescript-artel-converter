тип PromiseFulfilledResult<T> = интерфейс
{
  status: "fulfilled"

  value: T
}


тип PromiseRejectedResult = интерфейс
{
  status: "rejected"

  reason: /*(!) any */ Объект?
}


тип PromiseSettledResult<T> = Объект? /*(!)PromiseFulfilledResult<T> | PromiseRejectedResult*/

тип PromiseConstructor = интерфейс
{
  операция allSettled<T = /*(!) защищено */ (Объект? /*(!)Список</*(!) unknown */ Объект?> | объект {  }*/)>(values: T): Promise</*(!) { -readonly [P in keyof T]: PromiseSettledResult<Awaited<T[P]>>; } */ Объект?>

  операция allSettled<T>(values: Iterable<Объект? /*(!)T | PromiseLike<T>*/>): Promise<Список<PromiseSettledResult<Awaited<T>>>>
}

