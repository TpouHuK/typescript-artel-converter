внешнее /*(!) Intl */
{
  // http://cldr.unicode.org/index/cldr-spec/plural-rules#TOC-Determining-Plural-Categories

  тип LDMLPluralRule = Объект? /*(!)"zero" | "one" | "two" | "few" | "many" | "other"*/

  тип PluralRuleType = Объект? /*(!)"cardinal" | "ordinal"*/

  тип PluralRulesOptions = интерфейс
  {
    localeMatcher: Объект? /*(!)"lookup" | "best fit" | пусто*/

    type: PluralRuleType?

    minimumIntegerDigits: Число?

    minimumFractionDigits: Число?

    maximumFractionDigits: Число?

    minimumSignificantDigits: Число?

    maximumSignificantDigits: Число?
  }


  тип ResolvedPluralRulesOptions = интерфейс
  {
    locale: Текст

    pluralCategories: Список<LDMLPluralRule>

    type: PluralRuleType

    minimumIntegerDigits: Число

    minimumFractionDigits: Число

    maximumFractionDigits: Число

    minimumSignificantDigits: Число

    maximumSignificantDigits: Число
  }


  тип PluralRules = интерфейс
  {
    операция resolvedOptions(): ResolvedPluralRulesOptions

    операция select(n: Число): LDMLPluralRule
  }


  конст PluralRules: объект { при создании(locales: Объект? /*(!)Текст | Список<Текст> | пусто*/ = пусто, options: PluralRulesOptions? = пусто): PluralRules; /*(!) (locales?: string | string[], options?: PluralRulesOptions): PluralRules*/; операция supportedLocalesOf(locales: Объект? /*(!)Текст | Список<Текст>*/, options: объект { localeMatcher: Объект? /*(!)"lookup" | "best fit"*/ }? = пусто): Список<Текст> }


  // We can only have one definition for 'type' in TypeScript, and so you can learn where the keys come from here:

  тип ES2018NumberFormatPartType = Объект? /*(!)"literal" | "nan" | "infinity" | "percent" | "integer" | "group" | "decimal" | "fraction" | "plusSign" | "minusSign" | "percentSign" | "currency" | "code" | "symbol" | "name"*/

  тип ES2020NumberFormatPartType = Объект? /*(!)"compact" | "exponentInteger" | "exponentMinusSign" | "exponentSeparator" | "unit" | "unknown"*/

  тип NumberFormatPartTypes = Объект? /*(!)ES2018NumberFormatPartType | ES2020NumberFormatPartType*/

  тип NumberFormatPart = интерфейс
  {
    type: NumberFormatPartTypes

    value: Текст
  }


  тип NumberFormat = интерфейс
  {
    операция formatToParts(number: Объект? /*(!)Число | bigint | пусто*/ = пусто): Список<NumberFormatPart>
  }
}
