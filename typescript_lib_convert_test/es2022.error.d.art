тип ErrorOptions = интерфейс
{
  cause: /*(!) unknown */ Объект?
}


тип Error = интерфейс
{
  cause: /*(!) unknown */ Объект?
}


тип ErrorConstructor = интерфейс
{
  при создании(message: Текст? = пусто, options: ErrorOptions? = пусто): Error

  /*(!) (message?: string, options?: ErrorOptions): Error*/
}


тип EvalErrorConstructor = интерфейс
{
  при создании(message: Текст? = пусто, options: ErrorOptions? = пусто): EvalError

  /*(!) (message?: string, options?: ErrorOptions): EvalError*/
}


тип RangeErrorConstructor = интерфейс
{
  при создании(message: Текст? = пусто, options: ErrorOptions? = пусто): RangeError

  /*(!) (message?: string, options?: ErrorOptions): RangeError*/
}


тип ReferenceErrorConstructor = интерфейс
{
  при создании(message: Текст? = пусто, options: ErrorOptions? = пусто): ReferenceError

  /*(!) (message?: string, options?: ErrorOptions): ReferenceError*/
}


тип SyntaxErrorConstructor = интерфейс
{
  при создании(message: Текст? = пусто, options: ErrorOptions? = пусто): SyntaxError

  /*(!) (message?: string, options?: ErrorOptions): SyntaxError*/
}


тип TypeErrorConstructor = интерфейс
{
  при создании(message: Текст? = пусто, options: ErrorOptions? = пусто): TypeError

  /*(!) (message?: string, options?: ErrorOptions): TypeError*/
}


тип URIErrorConstructor = интерфейс
{
  при создании(message: Текст? = пусто, options: ErrorOptions? = пусто): URIError

  /*(!) (message?: string, options?: ErrorOptions): URIError*/
}


тип AggregateErrorConstructor = интерфейс
{
  при создании(errors: Iterable</*(!) any */ Объект?>, message: Текст? = пусто, options: ErrorOptions? = пусто): AggregateError

  /*(!) (
        errors: Iterable<any>,
        message?: string,
        options?: ErrorOptions,
    ): AggregateError*/
}

